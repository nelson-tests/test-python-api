name: 'Build'


on:
  workflow_dispatch: # To can dispatch manually

  push: # First pipeline to run when deploy a new version
    branches:
      - main
    paths:
      - "src/**"
      - 'Dockerfile'
      - 'requirements.txt'



env:
  IMAGE_NAME: 'test-python-api'



jobs:

  build:
    name: "Build Image"
    runs-on: 'ubuntu-latest'

    steps:
    - name: "Checkout"
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Semantic Release
      id: 'semantic-release'
      uses: cycjimmy/semantic-release-action@v4.1.0
      with:
#        dry_run: true # TODO: Remove this line
        semantic_version: 22.0.8
        extra_plugins: |
          @semantic-release/changelog
          @semantic-release/git
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: "New version"
      run: |
        echo "Published new version?: ${{ steps.semantic-release.outputs.new_release_published }}"
        echo "New version: ${{ steps.semantic-release.outputs.new_release_version }}"
        echo "Major: ${{ steps.semantic-release.outputs.new_release_major_version }}"
        echo "Minor: ${{ steps.semantic-release.outputs.new_release_minor_version }}"
        echo "Patch: ${{ steps.semantic-release.outputs.new_release_patch_version }}"
        echo "Notes: ${{ steps.semantic-release.outputs.new_release_notes }}"
        echo "GitHead: ${{ steps.semantic-release.outputs.new_release_git_head }}"
        echo "GitTag: ${{ steps.semantic-release.outputs.new_release_git_tag }}"
        echo "**************"
        echo "Last version: ${{ steps.semantic-release.outputs.last_release_version }}"
        echo "Last GitHead: ${{ steps.semantic-release.outputs.last_release_git_head }}"
        echo "Last GitTag: ${{ steps.semantic-release.outputs.last_release_git_tag }}"

    - name: 'Set up Docker Buildx'
      uses: docker/setup-buildx-action@v3

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          ${{ steps.semantic-release.outputs.new_release_version }}
          latest

    - name: 'Show metadata'
      run: |
        echo "Show metadata"
        echo "Tags: ${{ steps.meta.outputs.tags }}"

    - name: 'Build and'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Save Docker Image
      run: |
        docker save -o ${{ env.IMAGE_NAME }}.tar ${{ env.IMAGE_NAME }}:${{ steps.semantic-release.outputs.new_release_version }}

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.IMAGE_NAME }}
        path: ${{ env.IMAGE_NAME }}.tar
        retention-days: 1
